<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="0" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-12T16:37:14 NZDT" name="Default suite" finished-at="2023-10-12T16:37:32 NZDT" duration-ms="18002">
    <groups>
    </groups>
    <test started-at="2023-10-12T16:37:14 NZDT" name="Default test" finished-at="2023-10-12T16:37:32 NZDT" duration-ms="18002">
      <class name="sel.test.Regression">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:sel.test.Regression@42e99e4a]" started-at="2023-10-12T16:37:14 NZDT" name="beforeClass" finished-at="2023-10-12T16:37:25 NZDT" duration-ms="10574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:sel.test.Regression@42e99e4a]" started-at="2023-10-12T16:37:25 NZDT" name="beforeMethod" finished-at="2023-10-12T16:37:25 NZDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sel.test.Regression.regression(java.lang.String,java.lang.String,java.lang.reflect.Method,org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="regression(java.lang.String,java.lang.String,java.lang.reflect.Method,org.testng.ITestContext)[pri:0, instance:sel.test.Regression@42e99e4a]" started-at="2023-10-12T16:37:25 NZDT" name="regression" data-provider="urls" finished-at="2023-10-12T16:37:27 NZDT" duration-ms="2392" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://demo.guru99.com/test/newtours/index.php]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Homepage]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void sel.test.Regression.regression(java.lang.String,java.lang.String,java.lang.reflect.Method,org.testng.ITestContext)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@56de6d6b]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at sel.test.Regression.regression(Regression.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regression -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:sel.test.Regression@42e99e4a]" started-at="2023-10-12T16:37:27 NZDT" name="afterMethod" finished-at="2023-10-12T16:37:27 NZDT" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=regression status=FAILURE method=Regression.regression(java.lang.String,java.lang.String,java.lang.reflect.Method,org.testng.ITestContext)[pri:0, instance:sel.test.Regression@42e99e4a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@56de6d6b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:sel.test.Regression@42e99e4a]" started-at="2023-10-12T16:37:27 NZDT" name="beforeMethod" finished-at="2023-10-12T16:37:27 NZDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sel.test.Regression.regression(java.lang.String,java.lang.String,java.lang.reflect.Method,org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="regression(java.lang.String,java.lang.String,java.lang.reflect.Method,org.testng.ITestContext)[pri:0, instance:sel.test.Regression@42e99e4a]" started-at="2023-10-12T16:37:27 NZDT" name="regression" data-provider="urls" finished-at="2023-10-12T16:37:30 NZDT" duration-ms="2111" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://demo.guru99.com/test/newtours/reservation.php]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ReservationPage]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void sel.test.Regression.regression(java.lang.String,java.lang.String,java.lang.reflect.Method,org.testng.ITestContext)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@56de6d6b]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at sel.test.Regression.regression(Regression.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regression -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:sel.test.Regression@42e99e4a]" started-at="2023-10-12T16:37:30 NZDT" name="afterMethod" finished-at="2023-10-12T16:37:30 NZDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=regression status=FAILURE method=Regression.regression(java.lang.String,java.lang.String,java.lang.reflect.Method,org.testng.ITestContext)[pri:0, instance:sel.test.Regression@42e99e4a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@56de6d6b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="regression(java.lang.String,java.lang.String,java.lang.reflect.Method,org.testng.ITestContext)[pri:0, instance:sel.test.Regression@42e99e4a]" started-at="2023-10-12T16:37:30 NZDT" name="regression" data-provider="urls" finished-at="2023-10-12T16:37:31 NZDT" duration-ms="1891" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://demo.guru99.com/test/newtours/reservation2.php]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ReservationPage2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void sel.test.Regression.regression(java.lang.String,java.lang.String,java.lang.reflect.Method,org.testng.ITestContext)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@56de6d6b]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at sel.test.Regression.regression(Regression.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regression -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:sel.test.Regression@42e99e4a]" started-at="2023-10-12T16:37:30 NZDT" name="beforeMethod" finished-at="2023-10-12T16:37:30 NZDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sel.test.Regression.regression(java.lang.String,java.lang.String,java.lang.reflect.Method,org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:sel.test.Regression@42e99e4a]" started-at="2023-10-12T16:37:31 NZDT" name="afterMethod" finished-at="2023-10-12T16:37:31 NZDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=regression status=FAILURE method=Regression.regression(java.lang.String,java.lang.String,java.lang.reflect.Method,org.testng.ITestContext)[pri:0, instance:sel.test.Regression@42e99e4a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@56de6d6b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:sel.test.Regression@42e99e4a]" started-at="2023-10-12T16:37:31 NZDT" name="afterclass" finished-at="2023-10-12T16:37:32 NZDT" duration-ms="991" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
      </class> <!-- sel.test.Regression -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
